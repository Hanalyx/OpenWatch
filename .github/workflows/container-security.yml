name: Container Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC

jobs:
  trivy-scan:
    name: Trivy Container Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ['backend', 'frontend']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Build Docker image
        run: |
          docker build -f docker/Dockerfile.${{ matrix.image }} -t openwatch-${{ matrix.image }}:scan .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'openwatch-${{ matrix.image }}:scan'
          format: 'sarif'
          output: 'trivy-results-${{ matrix.image }}.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '1'

      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-${{ matrix.image }}.sarif'
          category: 'container-scan-${{ matrix.image }}'

  grype-scan:
    name: Grype Container Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ['backend', 'frontend']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Build Docker image
        run: |
          docker build -f docker/Dockerfile.${{ matrix.image }} -t openwatch-${{ matrix.image }}:scan .

      - name: Run Grype vulnerability scanner
        uses: anchore/scan-action@v3
        with:
          image: 'openwatch-${{ matrix.image }}:scan'
          fail-build: true
          severity-cutoff: high
          output-format: sarif

      - name: Upload Grype scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
          category: 'grype-scan-${{ matrix.image }}'