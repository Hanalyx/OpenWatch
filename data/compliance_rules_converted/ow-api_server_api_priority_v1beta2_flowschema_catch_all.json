{
  "_id": "ow-api_server_api_priority_v1beta2_flowschema_catch_all",
  "rule_id": "ow-api_server_api_priority_v1beta2_flowschema_catch_all",
  "scap_rule_id": "xccdf_org.ssgproject.content_rule_api_server_api_priority_v1beta2_flowschema_catch_all",
  "parent_rule_id": null,
  "metadata": {
    "name": "Ensure catch-all FlowSchema object for API Priority and Fairness Exists",
    "description": "Using <tt>APIPriorityAndFairness</tt> feature provides a fine-grained way\nto control the behaviour of the Kubernetes API server in an overload\nsituation. The well-known FlowSchema <tt>catch-all</tt> should be available\nto make sure that every request gets some kind of classification. By default,\nthe <tt>catch-all</tt> priority level only allows one concurrency share and\ndoes not queue requests. To inspect all the <tt>FlowSchema</tt> objects, run:\n<pre>oc get flowschema</pre>\nTo inspect the well-known <tt>catch-all</tt> object, run the following:\n<pre>oc describe flowschema catch-all</pre>",
    "rationale": "The <tt>FlowSchema</tt> API objects enforce a limit on the\nnumber of events that the API Server will accept in a given time slice\nIn a large multi-tenant cluster, there might be a small percentage of\nmisbehaving tenants which could have a significant impact on the\nperformance of the cluster overall. It is recommended to limit the rate\nof events that the API Server will accept.",
    "source": {
      "upstream_id": "api_server_api_priority_v1beta2_flowschema_catch_all",
      "complianceascode_version": "0.1.73",
      "source_file": "converted_from_yaml",
      "cce_id": "CCE-86390-2",
      "imported_at": "2025-10-03T02:25:59.229624+00:00"
    }
  },
  "abstract": false,
  "severity": "medium",
  "category": "system_hardening",
  "security_function": "access_control",
  "tags": [
    "converted",
    "scap",
    "ssg",
    "severity_medium"
  ],
  "frameworks": {
    "cis": {
      "controls_v8": [
        "1.2.10"
      ]
    },
    "nist": {
      "800-53r5": [
        "CM-6",
        "CM-6(1)"
      ]
    },
    "pci": {
      "v4.0": [
        "Req-2.2"
      ]
    },
    "stig": {
      "current": [
        "SRG-APP-000516-CTR-001325"
      ]
    }
  },
  "platform_implementations": {
    "rhel": {
      "versions": [
        "8",
        "9"
      ],
      "check_method": "custom",
      "check_command": "# TODO: Implement yamlfile_value check",
      "enable_command": "# TODO: Implement yamlfile_value remediation",
      "service_dependencies": []
    }
  },
  "platform_requirements": {
    "required_capabilities": [],
    "excluded_environments": []
  },
  "check_type": "template",
  "check_content": {
    "scap_rule_id": "xccdf_org.ssgproject.content_rule_api_server_api_priority_v1beta2_flowschema_catch_all",
    "method": "xccdf_evaluation",
    "expected_result": "pass"
  },
  "fix_available": true,
  "fix_content": {},
  "manual_remediation": "Using <tt>APIPriorityAndFairness</tt> feature provides a fine-grained way\nto control the behaviour of the Kubernetes API server in an overload\nsituation. The well-known FlowSchema <tt>catch-all</tt> should be available\nto make sure that every request gets some kind of classification. By default,\nthe <tt>catch-all</tt> priority level only allows one concurrency share and\ndoes not queue requests. To inspect all the <tt>FlowSchema</tt> objects, run:\n<pre>oc get flowschema</pre>\nTo inspect the well-known <tt>catch-all</tt> object, run the following:\n<pre>oc describe flowschema catch-all</pre>",
  "remediation_complexity": "medium",
  "remediation_risk": "low",
  "dependencies": {
    "requires": [],
    "conflicts": [],
    "related": []
  },
  "source_file": "applications/openshift/api-server/api_server_api_priority_v1beta2_flowschema_catch_all/rule.yml",
  "source_hash": "sha256:10d1154679da9907",
  "version": "2024.2",
  "imported_at": "2025-10-03T02:25:59.229757+00:00",
  "updated_at": "2025-10-03T02:25:59.229761+00:00",
  "identifiers": {
    "cce": "CCE-86390-2"
  }
}