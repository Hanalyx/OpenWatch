{
  "_id": "ow-audit_rules_suid_auid_privilege_function",
  "rule_id": "ow-audit_rules_suid_auid_privilege_function",
  "scap_rule_id": "xccdf_org.ssgproject.content_rule_audit_rules_suid_auid_privilege_function",
  "parent_rule_id": null,
  "metadata": {
    "name": "Record Events When Executables Are Run As Another User",
    "description": "Verify the system generates an audit record when actions are run as another user.\nsudo provides users with temporary elevated privileges to perform operations, either as the superuser or another user.\n\nIf audit is using the \"auditctl\" tool to load the rules, run the following command:\n\n<pre>$ sudo grep execve /etc/audit/audit.rules</pre>\n\nIf audit is using the \"augenrules\" tool to load the rules, run the following command:\n\n<pre>$ sudo grep -r execve /etc/audit/rules.d</pre>\n<pre>-a always,exit -F arch=b32 -S execve -C euid!=uid -F auid!=unset -k user_emulation</pre>\n<pre>-a always,exit -F arch=b64  S execve -C euid!=uid -F auid!=unset -k user_emulation</pre>\n\nIf both the \"b32\" and \"b64\" audit rules for \"SUID\" files are not defined, this is a finding.",
    "rationale": "Creating an audit log of users with temporary elevated privileges and the\noperation(s) they performed is essential to reporting. Administrators will\nwant to correlate the events written to the audit trail with the records\nwritten to sudo's logfile to verify if unauthorized commands have\nbeen executed.\nMisuse of privileged functions, either intentionally or unintentionally by\nauthorized users, or by unauthorized external entities that have\ncompromised information system accounts, is a serious and ongoing concern\nand can have significant adverse impacts on organizations. Auditing the use\nof privileged functions is one way to detect such misuse and identify the\nrisk from insider threats and the advanced persistent threat.",
    "source": {
      "upstream_id": "audit_rules_suid_auid_privilege_function",
      "complianceascode_version": "0.1.73",
      "source_file": "converted_from_yaml",
      "cce_id": "CCE-90209-8",
      "imported_at": "2025-10-03T02:25:56.470149+00:00"
    }
  },
  "abstract": false,
  "severity": "medium",
  "category": "audit_logging",
  "security_function": "access_control",
  "tags": [
    "converted",
    "scap",
    "ssg",
    "severity_medium"
  ],
  "frameworks": {},
  "platform_implementations": {},
  "platform_requirements": {
    "required_capabilities": [],
    "excluded_environments": []
  },
  "check_type": "scap",
  "check_content": {
    "scap_rule_id": "xccdf_org.ssgproject.content_rule_audit_rules_suid_auid_privilege_function",
    "method": "xccdf_evaluation",
    "expected_result": "pass"
  },
  "fix_available": false,
  "fix_content": {},
  "manual_remediation": "Verify the system generates an audit record when actions are run as another user.\nsudo provides users with temporary elevated privileges to perform operations, either as the superuser or another user.\n\nIf audit is using the \"auditctl\" tool to load the rules, run the following command:\n\n<pre>$ sudo grep execve /etc/audit/audit.rules</pre>\n\nIf audit is using the \"augenrules\" tool to load the rules, run the following command:\n\n<pre>$ sudo grep -r execve /etc/audit/rules.d</pre>\n<pre>-a always,exit -F arch=b32 -S execve -C euid!=uid -F auid!=unset -k user_emulation</pre>\n<pre>-a always,exit -F arch=b64  S execve -C euid!=uid -F auid!=unset -k user_emulation</pre>\n\nIf both the \"b32\" and \"b64\" audit rules for \"SUID\" files are not defined, this is a finding.",
  "remediation_complexity": "medium",
  "remediation_risk": "low",
  "dependencies": {
    "requires": [],
    "conflicts": [],
    "related": []
  },
  "source_file": "linux_os/guide/auditing/auditd_configure_rules/audit_rules_suid_auid_privilege_function/rule.yml",
  "source_hash": "sha256:40844bc4fea90050",
  "version": "2024.2",
  "imported_at": "2025-10-03T02:25:56.470243+00:00",
  "updated_at": "2025-10-03T02:25:56.470246+00:00",
  "identifiers": {
    "cce": "CCE-90209-8"
  }
}