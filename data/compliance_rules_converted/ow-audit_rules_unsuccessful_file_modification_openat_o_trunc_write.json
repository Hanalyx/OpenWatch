{
  "_id": "ow-audit_rules_unsuccessful_file_modification_openat_o_trunc_write",
  "rule_id": "ow-audit_rules_unsuccessful_file_modification_openat_o_trunc_write",
  "scap_rule_id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_openat_o_trunc_write",
  "parent_rule_id": null,
  "metadata": {
    "name": "Record Unsuccessful Modification Attempts to Files - openat O_TRUNC_WRITE",
    "description": "The audit system should collect detailed unauthorized file accesses for\nall users and root. The <tt>openat</tt> syscall can be used to modify files\nif called for write operation of with O_TRUNC_WRITE flag.\n\nThe following auidt rules will asure that unsuccessful attempts to modify a\nfile via <tt>openat</tt> syscall are collected.\n\nIf the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>\nprogram to read audit rules during daemon startup (the default), add the\nrules below to a file with suffix <tt>.rules</tt> in the directory\n<tt>/etc/audit/rules.d</tt>.\n\nIf the <tt>auditd</tt> daemon is configured to use the <tt>auditctl</tt>\nutility to read audit rules during daemon startup, add the rules below to\n<tt>/etc/audit/audit.rules</tt> file.\n<pre>\n-a always,exit -F arch=b32 -S openat -F a2&amp;01003 -F exit=-EACCES -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-modification\n-a always,exit -F arch=b32 -S openat -F a2&amp;01003 -F exit=-EPERM -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-modification\n</pre>\n\nIf the system is 64 bit then also add the following lines:\n<pre>\n-a always,exit -F arch=b64 -S openat -F a2&amp;01003 -F exit=-EACCES -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-modification\n-a always,exit -F arch=b64 -S openat -F a2&amp;01003 -F exit=-EPERM -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-modification\n</pre>",
    "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing\nthese events could serve as evidence of potential system compromise.",
    "source": {
      "upstream_id": "audit_rules_unsuccessful_file_modification_openat_o_trunc_write",
      "complianceascode_version": "0.1.73",
      "source_file": "converted_from_yaml",
      "cce_id": "CCE-82636-2",
      "imported_at": "2025-10-03T02:25:56.703881+00:00"
    }
  },
  "abstract": false,
  "severity": "medium",
  "category": "audit_logging",
  "security_function": "access_control",
  "tags": [
    "converted",
    "scap",
    "ssg",
    "severity_medium"
  ],
  "frameworks": {
    "cis": {
      "controls_v8": [
        "1",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "19",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "hipaa": {
      "current": [
        "164.308(a)(1)(ii)(D)",
        "164.308(a)(3)(ii)(A)",
        "164.308(a)(5)(ii)(C)",
        "164.312(a)(2)(i)",
        "164.312(b)",
        "164.312(d)",
        "164.312(e)"
      ]
    },
    "iso27001": {
      "2013": [
        "A.11.2.6",
        "A.12.4.1",
        "A.12.4.2",
        "A.12.4.3",
        "A.12.4.4",
        "A.12.7.1",
        "A.13.1.1",
        "A.13.2.1",
        "A.14.1.3",
        "A.14.2.7",
        "A.15.2.1",
        "A.15.2.2",
        "A.16.1.4",
        "A.16.1.5",
        "A.16.1.7",
        "A.6.2.1",
        "A.6.2.2"
      ]
    },
    "nist": {
      "800-53r5": [
        "AU-2(d)",
        "AU-12(c)",
        "CM-6(a)",
        "DE.AE-3",
        "DE.AE-5",
        "DE.CM-1",
        "DE.CM-3",
        "DE.CM-7",
        "ID.SC-4",
        "PR.AC-3",
        "PR.PT-1",
        "PR.PT-4",
        "RS.AN-1",
        "RS.AN-4"
      ]
    },
    "pci": {
      "v4.0": [
        "Req-10.2.4",
        "Req-10.2.1"
      ]
    },
    "stig": {
      "current": [
        "SRG-OS-000064-GPOS-00033",
        "SRG-OS-000458-GPOS-00203",
        "SRG-OS-000461-GPOS-00205",
        "SRG-OS-000392-GPOS-00172"
      ]
    }
  },
  "platform_implementations": {
    "rhel": {
      "versions": [
        "8",
        "9"
      ],
      "check_method": "custom",
      "check_command": "# TODO: Implement audit_rules_unsuccessful_file_modification_o_trunc_write check",
      "enable_command": "# TODO: Implement audit_rules_unsuccessful_file_modification_o_trunc_write remediation",
      "service_dependencies": []
    }
  },
  "platform_requirements": {
    "required_capabilities": [],
    "excluded_environments": []
  },
  "check_type": "template",
  "check_content": {
    "scap_rule_id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_openat_o_trunc_write",
    "method": "xccdf_evaluation",
    "expected_result": "pass"
  },
  "fix_available": true,
  "fix_content": {},
  "manual_remediation": "The audit system should collect detailed unauthorized file accesses for\nall users and root. The <tt>openat</tt> syscall can be used to modify files\nif called for write operation of with O_TRUNC_WRITE flag.\n\nThe following auidt rules will asure that unsuccessful attempts to modify a\nfile via <tt>openat</tt> syscall are collected.\n\nIf the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>\nprogram to read audit rules during daemon startup (the default), add the\nrules below to a file with suffix <tt>.rules</tt> in the directory\n<tt>/etc/audit/rules.d</tt>.\n\nIf the <tt>auditd</tt> daemon is configured to use the <tt>auditctl</tt>\nutility to read audit rules during daemon startup, add the rules below to\n<tt>/etc/audit/audit.rules</tt> file.\n<pre>\n-a always,exit -F arch=b32 -S openat -F a2&amp;01003 -F exit=-EACCES -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-modification\n-a always,exit -F arch=b32 -S openat -F a2&amp;01003 -F exit=-EPERM -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-modification\n</pre>\n\nIf the system is 64 bit then also add the following lines:\n<pre>\n-a always,exit -F arch=b64 -S openat -F a2&amp;01003 -F exit=-EACCES -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-modification\n-a always,exit -F arch=b64 -S openat -F a2&amp;01003 -F exit=-EPERM -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-modification\n</pre>",
  "remediation_complexity": "medium",
  "remediation_risk": "low",
  "dependencies": {
    "requires": [],
    "conflicts": [],
    "related": []
  },
  "source_file": "linux_os/guide/auditing/auditd_configure_rules/audit_file_modification/audit_rules_unsuccessful_file_modification_openat_o_trunc_write/rule.yml",
  "source_hash": "sha256:cb63765218b2d43f",
  "version": "2024.2",
  "imported_at": "2025-10-03T02:25:56.704045+00:00",
  "updated_at": "2025-10-03T02:25:56.704048+00:00",
  "identifiers": {
    "cce": "CCE-82636-2"
  }
}