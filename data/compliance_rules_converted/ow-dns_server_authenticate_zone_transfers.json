{
  "_id": "ow-dns_server_authenticate_zone_transfers",
  "rule_id": "ow-dns_server_authenticate_zone_transfers",
  "scap_rule_id": "xccdf_org.ssgproject.content_rule_dns_server_authenticate_zone_transfers",
  "parent_rule_id": null,
  "metadata": {
    "name": "Authenticate Zone Transfers",
    "description": "If it is necessary for a secondary nameserver to receive zone data\nvia zone transfer from the primary server, follow the instructions here.  Use\ndnssec-keygen to create a symmetric key file in the current directory:\n<pre>$ cd /tmp\n$ sudo dnssec-keygen -a HMAC-MD5 -b 128 -n HOST dns.example.com\nKdns.example.com .+aaa +iiiii</pre>\nThis output is the name of a file containing the new key. Read the file to find\nthe base64-encoded key string:\n<pre>$ sudo cat Kdns.example.com .+NNN +MMMMM .key\ndns.example.com IN KEY 512 3 157 base64-key-string</pre>\nAdd the directives to <tt>/etc/named.conf</tt> on the primary server:\n<pre>key zone-transfer-key {\n  algorithm hmac-md5;\n  secret \"base64-key-string \";\n};\nzone \"example.com \" IN {\n  type master;\n  allow-transfer { key zone-transfer-key; };\n  ...\n};</pre>\nAdd the directives below to <tt>/etc/named.conf</tt> on the secondary nameserver:\n<pre>key zone-transfer-key {\n  algorithm hmac-md5;\n  secret \"base64-key-string \";\n};\n\nserver IP-OF-MASTER {\n  keys { zone-transfer-key; };\n};\n\nzone \"example.com \" IN {\n  type slave;\n  masters { IP-OF-MASTER ; };\n  ...\n};</pre>",
    "rationale": "The BIND transaction signature (TSIG) functionality allows primary\nand secondary nameservers to use a shared secret to verify authorization to\nperform zone transfers. This method is more secure than using IP-based limiting\nto restrict nameserver access, since IP addresses can be easily spoofed.\nHowever, if you cannot configure TSIG between your servers because, for\ninstance, the secondary nameserver is not under your control and its\nadministrators are unwilling to configure TSIG, you can configure an\nallow-transfer directive with numerical IP addresses or ACLs as a last resort.",
    "source": {
      "upstream_id": "dns_server_authenticate_zone_transfers",
      "complianceascode_version": "0.1.73",
      "source_file": "converted_from_yaml",
      "cce_id": "CCE-82410-2",
      "imported_at": "2025-10-03T10:45:55.745626+00:00"
    }
  },
  "abstract": false,
  "severity": "medium",
  "category": "system_hardening",
  "security_function": "access_control",
  "tags": [
    "severity_medium",
    "scap",
    "converted",
    "ssg"
  ],
  "frameworks": {
    "cis": {
      "controls_v8": [
        "11",
        "14",
        "3",
        "9"
      ]
    },
    "iso27001": {
      "2013": [
        "A.12.1.2",
        "A.12.5.1",
        "A.12.6.2",
        "A.14.2.2",
        "A.14.2.3",
        "A.14.2.4",
        "A.9.1.2"
      ]
    },
    "nist": {
      "800-53r5": [
        "CM-7(a)",
        "CM-7(b)",
        "CM-6(a)",
        "PR.IP-1",
        "PR.PT-3"
      ]
    }
  },
  "platform_implementations": {},
  "platform_requirements": {
    "required_capabilities": [],
    "excluded_environments": []
  },
  "check_type": "scap",
  "check_content": {
    "scap_rule_id": "xccdf_org.ssgproject.content_rule_dns_server_authenticate_zone_transfers",
    "method": "xccdf_evaluation",
    "expected_result": "pass"
  },
  "fix_available": false,
  "fix_content": {},
  "manual_remediation": "If it is necessary for a secondary nameserver to receive zone data\nvia zone transfer from the primary server, follow the instructions here.  Use\ndnssec-keygen to create a symmetric key file in the current directory:\n<pre>$ cd /tmp\n$ sudo dnssec-keygen -a HMAC-MD5 -b 128 -n HOST dns.example.com\nKdns.example.com .+aaa +iiiii</pre>\nThis output is the name of a file containing the new key. Read the file to find\nthe base64-encoded key string:\n<pre>$ sudo cat Kdns.example.com .+NNN +MMMMM .key\ndns.example.com IN KEY 512 3 157 base64-key-string</pre>\nAdd the directives to <tt>/etc/named.conf</tt> on the primary server:\n<pre>key zone-transfer-key {\n  algorithm hmac-md5;\n  secret \"base64-key-string \";\n};\nzone \"example.com \" IN {\n  type master;\n  allow-transfer { key zone-transfer-key; };\n  ...\n};</pre>\nAdd the directives below to <tt>/etc/named.conf</tt> on the secondary nameserver:\n<pre>key zone-transfer-key {\n  algorithm hmac-md5;\n  secret \"base64-key-string \";\n};\n\nserver IP-OF-MASTER {\n  keys { zone-transfer-key; };\n};\n\nzone \"example.com \" IN {\n  type slave;\n  masters { IP-OF-MASTER ; };\n  ...\n};</pre>",
  "remediation_complexity": "medium",
  "remediation_risk": "low",
  "dependencies": {
    "requires": [],
    "conflicts": [],
    "related": []
  },
  "source_file": "linux_os/guide/services/dns/dns_server_protection/dns_server_authenticate_zone_transfers/rule.yml",
  "source_hash": "sha256:cd46685c49adb348",
  "version": "2024.2",
  "imported_at": "2025-10-03T10:45:55.745815+00:00",
  "updated_at": "2025-10-03T10:45:55.745818+00:00",
  "identifiers": {
    "cce": "CCE-82410-2"
  }
}