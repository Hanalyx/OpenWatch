{
  "_id": "ow-ingress_controller_tls_security_profile",
  "rule_id": "ow-ingress_controller_tls_security_profile",
  "scap_rule_id": "xccdf_org.ssgproject.content_rule_ingress_controller_tls_security_profile",
  "parent_rule_id": null,
  "metadata": {
    "name": "Ensure IngressController is configured to use secure tlsSecurityProfile",
    "description": "<p>\nThe configuration <tt>tlsSecurityProfile</tt> specifies TLS configurations\nto be used while establishing connections with the externally exposed\nservers. Though secure transport mode is used for establishing connections,\nthe protocols used may not always be strong enough to avoid interception and\nmanipulation of the data in transport. TLS Security profile configured should\nnot make use of any protocols, ciphers, and algorithms with known security\nvulnerabilities.\n</p>\n\n<p>\n<tt>tlsSecurityProfile</tt> can be configured to use one of custom, intermediate,\nmodern, or old profile. Profile Old should be avoided at all times and when using\ncustom profile one should be extremely careful as invalid configurations can be\ncatastrophic. It is always advised to use highly secure intermediate or modern\nprofiles and if unset profile configured in apiservers.config.openshift.io/cluster\nresource will be used as default.\n</p>\n\n<p>\nTo update tlsSecurityProfile to Intermediate use the following command:\n{{% raw %}}<pre>oc patch -n openshift-ingress-operator ingresscontrollers.operator.openshift.io default --type 'json' --patch '[{\"op\": \"add\", \"path\": \"/spec/tlsSecurityProfile/intermediate\", \"value\": {}}, {\"op\": \"replace\", \"path\": \"/spec/tlsSecurityProfile/type\", \"value\": \"Intermediate\"}'</pre>{{% endraw %}}\n</p>\n\n<p>\nFor more information, follow\nOpenShift documentation:\n{{{ weblink(link=\"https://docs.openshift.com/container-platform/latest/security/tls-security-profiles.html\",\n            text=\"the relevant documentation\") }}}.\n</p>",
    "rationale": "The authenticity and integrity of the container platform and communication\nbetween nodes and components must be secure. If an insecure protocol,\ncipher, or algorithms is used, during transmission of data, the data can be\nintercepted and manipulated. To thwart the manipulation of the data during\ntransmission secure protocol, cipher and algorithms must be used.",
    "source": {
      "upstream_id": "ingress_controller_tls_security_profile",
      "complianceascode_version": "0.1.73",
      "source_file": "converted_from_yaml",
      "cce_id": "CCE-86234-2",
      "imported_at": "2025-10-03T02:25:59.454988+00:00"
    }
  },
  "abstract": false,
  "severity": "medium",
  "category": "network_security",
  "security_function": "access_control",
  "tags": [
    "converted",
    "scap",
    "ssg",
    "severity_medium"
  ],
  "frameworks": {
    "nist": {
      "800-53r5": [
        "SC-8",
        "SC-8(1)"
      ]
    },
    "stig": {
      "current": [
        "SRG-APP-000014-CTR-000040",
        "SRG-APP-000560-CTR-001340"
      ]
    }
  },
  "platform_implementations": {},
  "platform_requirements": {
    "required_capabilities": [],
    "excluded_environments": []
  },
  "check_type": "scap",
  "check_content": {
    "scap_rule_id": "xccdf_org.ssgproject.content_rule_ingress_controller_tls_security_profile",
    "method": "xccdf_evaluation",
    "expected_result": "pass"
  },
  "fix_available": false,
  "fix_content": {},
  "manual_remediation": "<p>\nThe configuration <tt>tlsSecurityProfile</tt> specifies TLS configurations\nto be used while establishing connections with the externally exposed\nservers. Though secure transport mode is used for establishing connections,\nthe protocols used may not always be strong enough to avoid interception and\nmanipulation of the data in transport. TLS Security profile configured should\nnot make use of any protocols, ciphers, and algorithms with known security\nvulnerabilities.\n</p>\n\n<p>\n<tt>tlsSecurityProfile</tt> can be configured to use one of custom, intermediate,\nmodern, or old profile. Profile Old should be avoided at all times and when using\ncustom profile one should be extremely careful as invalid configurations can be\ncatastrophic. It is always advised to use highly secure intermediate or modern\nprofiles and if unset profile configured in apiservers.config.openshift.io/cluster\nresource will be used as default.\n</p>\n\n<p>\nTo update tlsSecurityProfile to Intermediate use the following command:\n{{% raw %}}<pre>oc patch -n openshift-ingress-operator ingresscontrollers.operator.openshift.io default --type 'json' --patch '[{\"op\": \"add\", \"path\": \"/spec/tlsSecurityProfile/intermediate\", \"value\": {}}, {\"op\": \"replace\", \"path\": \"/spec/tlsSecurityProfile/type\", \"value\": \"Intermediate\"}'</pre>{{% endraw %}}\n</p>\n\n<p>\nFor more information, follow\nOpenShift documentation:\n{{{ weblink(link=\"https://docs.openshift.com/container-platform/latest/security/tls-security-profiles.html\",\n            text=\"the relevant documentation\") }}}.\n</p>",
  "remediation_complexity": "medium",
  "remediation_risk": "low",
  "dependencies": {
    "requires": [],
    "conflicts": [],
    "related": []
  },
  "source_file": "applications/openshift/networking/ingress_controller_tls_security_profile/rule.yml",
  "source_hash": "sha256:7ca0c36964c456dc",
  "version": "2024.2",
  "imported_at": "2025-10-03T02:25:59.455095+00:00",
  "updated_at": "2025-10-03T02:25:59.455098+00:00",
  "identifiers": {
    "cce": "CCE-86234-2"
  }
}