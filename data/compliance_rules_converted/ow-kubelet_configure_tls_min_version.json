{
  "_id": "ow-kubelet_configure_tls_min_version",
  "rule_id": "ow-kubelet_configure_tls_min_version",
  "scap_rule_id": "xccdf_org.ssgproject.content_rule_kubelet_configure_tls_min_version",
  "parent_rule_id": null,
  "metadata": {
    "name": "Ensure Kubelet is configured with allowed TLS versions",
    "description": "<p>\nThe configuration <tt>tlsSecurityProfile</tt> specifies TLS configurations\nto be used while establishing connections with the externally exposed\nservers. Though secure transport mode is used for establishing connections,\nthe protocols used may not always be strong enough to avoid interception and\nmanipulation of the data in transport. TLS Security profile configured should\nnot make use of any protocols, ciphers, and algorithms with known security\nvulnerabilities.\n</p>\n\n<p>\n<tt>tlsSecurityProfile</tt> can be configured to use one of custom, intermediate,\nmodern, or old profile. Profile Old should be avoided at all times and when using\ncustom profile one should be extremely careful as invalid configurations can be\ncatastrophic. It is always advised to configure minimum TLS version to TLSv1.2 or\nlatest when using Custom profile or to use predefined profiles Intermediate or\nmodern. If a TLS security profile is not configured, the default TLS security\nprofile is Intermediate.\n</p>\n\n<p>\nTo configure Custom tlsSecurityProfile for the Kubelet with TLSv1.2 as minimum\nTLS version, create a new or modify existing <tt>KubeletConfig</tt> object along\nthese lines, one for every <tt>MachineConfigPool</tt>:\n  <pre>\n  apiVersion: machineconfiguration.openshift.io/v1\n  kind: KubeletConfig\n  metadata:\n      name: kubelet-tls-config-$pool\n  spec:\n      tlsSecurityProfile:\n          type: Custom\n          custom:\n              ciphers:\n              - ECDHE-ECDSA-CHACHA20-POLY1305\n              - ECDHE-RSA-CHACHA20-POLY1305\n              - ECDHE-RSA-AES128-GCM-SHA256\n              - ECDHE-ECDSA-AES128-GCM-SHA256\n              minTLSVersion: {{{ xccdf_value(\"var_kubelet_tls_min_version\") }}}\n      machineConfigPoolSelector:\n          matchLabels:\n              pools.operator.machineconfiguration.openshift.io/$pool_name: \"\"\n  </pre>\nIn order to configure this rule to check for an alternate TLS version, both var_kubelet_tls_min_version_regex\nand var_kubelet_tls_min_version should be updated.\n</p>\n\n<p>\nFor more information, follow\nOpenShift documentation:\n{{{ weblink(link=\"https://docs.openshift.com/container-platform/4.11/nodes/nodes/nodes-nodes-tls.html\",\n            text=\"the relevant documentation\") }}}.\n</p>",
    "rationale": "The authenticity and integrity of the container platform and communication\nbetween nodes and components must be secure. If an insecure protocol,\ncipher, or algorithms is used, during transmission of data, the data can be\nintercepted and manipulated. To thwart the manipulation of the data during\ntransmission secure protocol, cipher and algorithms must be used.",
    "source": {
      "upstream_id": "kubelet_configure_tls_min_version",
      "complianceascode_version": "0.1.73",
      "source_file": "converted_from_yaml",
      "cce_id": "CCE-86623-6",
      "imported_at": "2025-10-03T02:25:59.277677+00:00"
    }
  },
  "abstract": false,
  "severity": "medium",
  "category": "system_hardening",
  "security_function": "access_control",
  "tags": [
    "converted",
    "scap",
    "ssg",
    "severity_medium"
  ],
  "frameworks": {
    "nist": {
      "800-53r5": [
        "SC-8",
        "SC-8(1)"
      ]
    },
    "stig": {
      "current": [
        "SRG-APP-000014-CTR-000040",
        "SRG-APP-000560-CTR-001340"
      ]
    }
  },
  "platform_implementations": {
    "rhel": {
      "versions": [
        "8",
        "9"
      ],
      "check_method": "custom",
      "check_command": "# TODO: Implement yamlfile_value check",
      "enable_command": "# TODO: Implement yamlfile_value remediation",
      "service_dependencies": []
    }
  },
  "platform_requirements": {
    "required_capabilities": [],
    "excluded_environments": []
  },
  "check_type": "template",
  "check_content": {
    "scap_rule_id": "xccdf_org.ssgproject.content_rule_kubelet_configure_tls_min_version",
    "method": "xccdf_evaluation",
    "expected_result": "pass"
  },
  "fix_available": true,
  "fix_content": {},
  "manual_remediation": "<p>\nThe configuration <tt>tlsSecurityProfile</tt> specifies TLS configurations\nto be used while establishing connections with the externally exposed\nservers. Though secure transport mode is used for establishing connections,\nthe protocols used may not always be strong enough to avoid interception and\nmanipulation of the data in transport. TLS Security profile configured should\nnot make use of any protocols, ciphers, and algorithms with known security\nvulnerabilities.\n</p>\n\n<p>\n<tt>tlsSecurityProfile</tt> can be configured to use one of custom, intermediate,\nmodern, or old profile. Profile Old should be avoided at all times and when using\ncustom profile one should be extremely careful as invalid configurations can be\ncatastrophic. It is always advised to configure minimum TLS version to TLSv1.2 or\nlatest when using Custom profile or to use predefined profiles Intermediate or\nmodern. If a TLS security profile is not configured, the default TLS security\nprofile is Intermediate.\n</p>\n\n<p>\nTo configure Custom tlsSecurityProfile for the Kubelet with TLSv1.2 as minimum\nTLS version, create a new or modify existing <tt>KubeletConfig</tt> object along\nthese lines, one for every <tt>MachineConfigPool</tt>:\n  <pre>\n  apiVersion: machineconfiguration.openshift.io/v1\n  kind: KubeletConfig\n  metadata:\n      name: kubelet-tls-config-$pool\n  spec:\n      tlsSecurityProfile:\n          type: Custom\n          custom:\n              ciphers:\n              - ECDHE-ECDSA-CHACHA20-POLY1305\n              - ECDHE-RSA-CHACHA20-POLY1305\n              - ECDHE-RSA-AES128-GCM-SHA256\n              - ECDHE-ECDSA-AES128-GCM-SHA256\n              minTLSVersion: {{{ xccdf_value(\"var_kubelet_tls_min_version\") }}}\n      machineConfigPoolSelector:\n          matchLabels:\n              pools.operator.machineconfiguration.openshift.io/$pool_name: \"\"\n  </pre>\nIn order to configure this rule to check for an alternate TLS version, both var_kubelet_tls_min_version_regex\nand var_kubelet_tls_min_version should be updated.\n</p>\n\n<p>\nFor more information, follow\nOpenShift documentation:\n{{{ weblink(link=\"https://docs.openshift.com/container-platform/4.11/nodes/nodes/nodes-nodes-tls.html\",\n            text=\"the relevant documentation\") }}}.\n</p>",
  "remediation_complexity": "medium",
  "remediation_risk": "low",
  "dependencies": {
    "requires": [],
    "conflicts": [],
    "related": []
  },
  "source_file": "applications/openshift/kubelet/kubelet_configure_tls_min_version/rule.yml",
  "source_hash": "sha256:0a5a0ecca61f46f4",
  "version": "2024.2",
  "imported_at": "2025-10-03T02:25:59.277830+00:00",
  "updated_at": "2025-10-03T02:25:59.277833+00:00",
  "identifiers": {
    "cce": "CCE-86623-6"
  }
}