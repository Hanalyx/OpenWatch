{
  "_id": "ow-selinux_confinement_of_daemons",
  "rule_id": "ow-selinux_confinement_of_daemons",
  "scap_rule_id": "xccdf_org.ssgproject.content_rule_selinux_confinement_of_daemons",
  "parent_rule_id": null,
  "metadata": {
    "name": "Ensure No Daemons are Unconfined by SELinux",
    "description": "Daemons for which the SELinux policy does not contain rules will inherit the\ncontext of the parent process. Because daemons are launched during\nstartup and descend from the <tt>init</tt> process, they inherit the <tt>unconfined_service_t</tt> context.\n<br />\n<br />\nTo check for unconfined daemons, run the following command:\n<pre>$ sudo ps -eZ | grep \"unconfined_service_t\"</pre>\nIt should produce no output in a well-configured system.",
    "rationale": "Daemons which run with the <tt>unconfined_service_t</tt> context may cause AVC denials,\nor allow privileges that the daemon does not require.",
    "source": {
      "upstream_id": "selinux_confinement_of_daemons",
      "complianceascode_version": "0.1.73",
      "source_file": "converted_from_yaml",
      "cce_id": "CCE-82688-3",
      "imported_at": "2025-10-03T10:45:56.296408+00:00"
    }
  },
  "abstract": false,
  "severity": "medium",
  "category": "system_hardening",
  "security_function": "access_control",
  "tags": [
    "severity_medium",
    "scap",
    "converted",
    "ssg"
  ],
  "frameworks": {
    "cis": {
      "controls_v8": [
        "1",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "18",
        "3",
        "5",
        "6",
        "9"
      ]
    },
    "hipaa": {
      "current": [
        "164.308(a)(1)(ii)(D)",
        "164.308(a)(3)",
        "164.308(a)(4)",
        "164.310(b)",
        "164.310(c)",
        "164.312(a)",
        "164.312(e)"
      ]
    },
    "iso27001": {
      "2013": [
        "A.10.1.1",
        "A.11.1.4",
        "A.11.1.5",
        "A.11.2.1",
        "A.12.1.2",
        "A.12.4.1",
        "A.12.4.2",
        "A.12.4.3",
        "A.12.4.4",
        "A.12.5.1",
        "A.12.6.2",
        "A.12.7.1",
        "A.13.1.1",
        "A.13.1.3",
        "A.13.2.1",
        "A.13.2.3",
        "A.13.2.4",
        "A.14.1.2",
        "A.14.1.3",
        "A.14.2.2",
        "A.14.2.3",
        "A.14.2.4",
        "A.6.1.2",
        "A.7.1.1",
        "A.7.1.2",
        "A.7.3.1",
        "A.8.2.2",
        "A.8.2.3",
        "A.9.1.1",
        "A.9.1.2",
        "A.9.2.3",
        "A.9.4.1",
        "A.9.4.4",
        "A.9.4.5"
      ]
    },
    "nist": {
      "800-53r5": [
        "CM-7(a)",
        "CM-7(b)",
        "CM-6(a)",
        "AC-3(3)(a)",
        "AC-6",
        "PR.AC-4",
        "PR.DS-5",
        "PR.IP-1",
        "PR.PT-1",
        "PR.PT-3"
      ]
    }
  },
  "platform_implementations": {},
  "platform_requirements": {
    "required_capabilities": [],
    "excluded_environments": []
  },
  "check_type": "scap",
  "check_content": {
    "scap_rule_id": "xccdf_org.ssgproject.content_rule_selinux_confinement_of_daemons",
    "method": "xccdf_evaluation",
    "expected_result": "pass"
  },
  "fix_available": false,
  "fix_content": {},
  "manual_remediation": "Daemons for which the SELinux policy does not contain rules will inherit the\ncontext of the parent process. Because daemons are launched during\nstartup and descend from the <tt>init</tt> process, they inherit the <tt>unconfined_service_t</tt> context.\n<br />\n<br />\nTo check for unconfined daemons, run the following command:\n<pre>$ sudo ps -eZ | grep \"unconfined_service_t\"</pre>\nIt should produce no output in a well-configured system.",
  "remediation_complexity": "medium",
  "remediation_risk": "low",
  "dependencies": {
    "requires": [],
    "conflicts": [],
    "related": []
  },
  "source_file": "linux_os/guide/system/selinux/selinux_confinement_of_daemons/rule.yml",
  "source_hash": "sha256:db4f1321de2310b0",
  "version": "2024.2",
  "imported_at": "2025-10-03T10:45:56.296527+00:00",
  "updated_at": "2025-10-03T10:45:56.296529+00:00",
  "identifiers": {
    "cce": "CCE-82688-3"
  }
}