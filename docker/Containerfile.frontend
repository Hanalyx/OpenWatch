# Multi-stage Podman build for React frontend with security hardening

# Stage 1: Build the React application
FROM docker.io/library/node:18-alpine AS builder

# Security labels and metadata
LABEL stage="builder" \
      maintainer="ml9005@hanalyx.com"

WORKDIR /app

# Use root for npm operations to avoid permission issues
USER root

# Copy package files
COPY frontend/package*.json ./

# Install dependencies as root to avoid cache permission issues
RUN npm install --only=production --no-audit --no-fund

# Copy frontend source code
COPY frontend/ ./

# Build the React application
RUN npm run build

# Stage 2: Production NGINX image for Podman rootless
FROM docker.io/library/nginx:alpine

# Security-focused labels for rootless operation
LABEL maintainer="ml9005@hanalyx.com" \
      version="1.0.0" \
      description="OpenWatch Frontend - Rootless NGINX container" \
      io.podman.annotations.userns="auto"

# Install dependencies and create non-root user with high UID/GID
RUN apk add --no-cache openssl curl shadow && \
    addgroup -g 10002 nginx-rootless && \
    adduser -D -u 10002 -G nginx-rootless nginx-rootless

# Remove default nginx configs and create custom structure
RUN rm -rf /etc/nginx/conf.d/* /var/log/nginx/* && \
    mkdir -p /etc/nginx/ssl /var/log/nginx /var/cache/nginx /var/run/nginx && \
    touch /var/run/nginx.pid

# Copy custom nginx configuration for rootless operation
COPY docker/frontend/nginx.conf /etc/nginx/nginx.conf
COPY docker/frontend/default-simple.conf /etc/nginx/conf.d/default.conf

# Workaround for Podman large file copy issue - use tar approach
RUN mkdir -p /usr/share/nginx/html
COPY --from=builder /app/build/index.html /usr/share/nginx/html/
COPY --from=builder /app/build/assets /usr/share/nginx/html/assets

# Set proper permissions for rootless execution
RUN chown -R 10002:10002 /usr/share/nginx/html /etc/nginx /var/log/nginx /var/cache/nginx /var/run/nginx && \
    chmod -R 755 /usr/share/nginx/html && \
    chmod -R 755 /etc/nginx && \
    chmod 755 /var/run/nginx

# Switch to non-root user
USER 10002:10002

# Expose unprivileged ports for rootless operation
EXPOSE 8080 8443

# Health check optimized for rootless
HEALTHCHECK --interval=20s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Start nginx in foreground mode for rootless
CMD ["nginx", "-g", "daemon off;"]