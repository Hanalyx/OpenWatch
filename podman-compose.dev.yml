# OpenWatch - Development Podman Compose (Simplified Security for Dev/Testing)
version: '3.8'

services:
  database:
    image: docker.io/library/postgres:15-alpine
    container_name: openwatch-db
    environment:
      POSTGRES_DB: openwatch
      POSTGRES_USER: openwatch
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-openwatch_dev_password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - openwatch-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openwatch -d openwatch"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    
  redis:
    image: docker.io/library/redis:7-alpine
    container_name: openwatch-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_dev_password} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - openwatch-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: docker/Containerfile.backend
    container_name: openwatch-backend
    environment:
      DATABASE_URL: postgresql://openwatch:${POSTGRES_PASSWORD:-openwatch_dev_password}@database:5432/openwatch
      SECRET_KEY: ${SECRET_KEY:-dev_secret_key_32_chars_minimum_length}
      MASTER_KEY: ${MASTER_KEY:-dev_master_key_32_chars_minimum_length}
      SCAP_CONTENT_DIR: ${SCAP_CONTENT_DIR:-/app/data/scap}
      SCAN_RESULTS_DIR: ${SCAN_RESULTS_DIR:-/app/data/results}
      OPENWATCH_DATABASE_URL: postgresql://openwatch:${POSTGRES_PASSWORD:-openwatch_dev_password}@database:5432/openwatch
      OPENWATCH_REDIS_URL: redis://:${REDIS_PASSWORD:-redis_dev_password}@redis:6379
      OPENWATCH_SECRET_KEY: ${SECRET_KEY:-dev_secret_key_32_chars_minimum_length}
      OPENWATCH_MASTER_KEY: ${MASTER_KEY:-dev_master_key_32_chars_minimum_length}
      OPENWATCH_FIPS_MODE: "false"
      OPENWATCH_REQUIRE_HTTPS: "false"
      OPENWATCH_DEBUG: "true"
      OPENWATCH_DEMO_MODE: "false"
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
      - ./security/certs:/app/security/certs:ro
      - ./security/keys:/app/security/keys
    ports:
      - "8000:8000"
    depends_on:
      - database
      - redis
    networks:
      - openwatch-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  worker:
    build:
      context: .
      dockerfile: docker/Containerfile.backend
    container_name: openwatch-worker
    command: ["python3", "-m", "celery", "-A", "app.celery_app", "worker", "--loglevel=info", "--concurrency=2"]
    environment:
      DATABASE_URL: postgresql://openwatch:${POSTGRES_PASSWORD:-openwatch_dev_password}@database:5432/openwatch
      SECRET_KEY: ${SECRET_KEY:-dev_secret_key_32_chars_minimum_length}
      MASTER_KEY: ${MASTER_KEY:-dev_master_key_32_chars_minimum_length}
      OPENWATCH_DATABASE_URL: postgresql://openwatch:${POSTGRES_PASSWORD:-openwatch_dev_password}@database:5432/openwatch
      OPENWATCH_REDIS_URL: redis://:${REDIS_PASSWORD:-redis_dev_password}@redis:6379
      OPENWATCH_SECRET_KEY: ${SECRET_KEY:-dev_secret_key_32_chars_minimum_length}
      OPENWATCH_MASTER_KEY: ${MASTER_KEY:-dev_master_key_32_chars_minimum_length}
      OPENWATCH_FIPS_MODE: "false"
      OPENWATCH_DEMO_MODE: "false"
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
      - ./security/certs:/app/security/certs:ro
      - ./security/keys:/app/security/keys
    depends_on:
      - database
      - redis
      - backend
    networks:
      - openwatch-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: docker/Containerfile.frontend
    container_name: openwatch-frontend
    ports:
      - "3001:8080"   # Changed to match development port
    environment:
      REACT_APP_API_URL: http://localhost:8000
    depends_on:
      - backend
    networks:
      - openwatch-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_data:
    driver: local
  app_logs:
    driver: local

networks:
  openwatch-network:
    driver: bridge